<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2019-03-05T07:06:13+00:00</updated><id>/</id><title type="html">Ravinder Nehra</title><subtitle>Security Enthusiast - Developer</subtitle><entry><title type="html">Brainwaves Cyber Security Hackathon</title><link href="/brainwaves-cyber-hack-19" rel="alternate" type="text/html" title="Brainwaves Cyber Security Hackathon" /><published>2019-02-06T05:45:00+00:00</published><updated>2019-02-06T05:45:00+00:00</updated><id>/brainwaves-cyber-hack-19</id><content type="html" xml:base="/brainwaves-cyber-hack-19">&lt;p&gt;This is the fifth edition of Brainwaves hackathon. The challenges are based on filesystems i.e. how data is stored in the hard disk. We are provided with 2 dumps of a hard disk.&lt;/p&gt;

&lt;h3&gt;Dump 1&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The first sector of the hard disk is been modified. To load the boot loader successfully at every boot process we need to fix it. Your task is to fix the first sector and upload it back to us. Corrupted bytes  of the partition entries  are replaced  with value &quot;CC&quot;. So you need to fix  these fields only.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Master_boot_record&quot;&gt;wiki&lt;/a&gt;, the first sector is a special boot sector called master boot record (MBR). After analyzing the given dump using &lt;code&gt;hexl-mode&lt;/code&gt; in emacs, I found the corrupted &lt;code&gt;cc&lt;/code&gt; bytes.&lt;/p&gt;

&lt;pre&gt;
000001b0: cd10 ac3c 0075 f4c3 608d 3b68 0000 0020  ...&amp;lt;.u..`.;h...
000001c0: 2100 debe 122c 0008 0000 &lt;mark&gt;cccc cccc&lt;/mark&gt; 00be  !....,..........
000001d0: 132c 075d 0459 00f8 0a00 00f0 0a00 005d  .,.].Y.........]
000001e0: 0559 07fe ffff &lt;mark&gt;cccc cccc&lt;/mark&gt; 00d0 e31d 00fe  .Y..............
000001f0: ffff 0ffe ffff 00b8 f91d 00a0 3e1c 55aa  ............&amp;gt;..U
&lt;/pre&gt;

&lt;p&gt;According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Master_boot_record#Sector_layout&quot;&gt;MBR layout&lt;/a&gt;, the master partition table start at address &lt;code&gt;1BE&lt;/code&gt; and ends with boot signature &lt;code&gt;55AA&lt;/code&gt;. The partition table consists of 4 entries and each entry looks like:
&lt;img src=&quot;/assets/images/PartitionTables.png&quot; alt=&quot;Partition Entry&quot; /&gt;
Based on the above information, the 4 partition entries in MBR are (the values have been converted from little-endian to big-endian):&lt;/p&gt;

&lt;table id=&quot;part-table&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;Boot indicator&lt;/th&gt;
&lt;th&gt;CHS(start)&lt;/th&gt;
&lt;th&gt;Partition type&lt;/th&gt;
&lt;th&gt;CHS(end)&lt;/th&gt;
&lt;th&gt;Starting sector&lt;/th&gt;
&lt;th&gt;Partition Size&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;002120&lt;/td&gt;
&lt;td&gt;de&lt;/td&gt;
&lt;td&gt;2c12be&lt;/td&gt;
&lt;td&gt;00000800&lt;/td&gt;
&lt;td&gt;cccccccc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;2c13be&lt;/td&gt;
&lt;td&gt;07&lt;/td&gt;
&lt;td&gt;59045d&lt;/td&gt;
&lt;td&gt;000af800&lt;/td&gt;
&lt;td&gt;000af000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;59055d&lt;/td&gt;
&lt;td&gt;07&lt;/td&gt;
&lt;td&gt;fffffe&lt;/td&gt;
&lt;td&gt;cccccccc&lt;/td&gt;
&lt;td&gt;1de3d000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;fffffe&lt;/td&gt;
&lt;td&gt;0f&lt;/td&gt;
&lt;td&gt;fffffe&lt;/td&gt;
&lt;td&gt;1df9b800&lt;/td&gt;
&lt;td&gt;1c3ea000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;To fix the first 4 corrupted bytes, I need to find the size of first partition which can be calculated as difference of &lt;code&gt;CHS_END&lt;/code&gt; and &lt;code&gt;CHS_START&lt;/code&gt;. But first the CHS values needs to be decoded and converted in units of sectors. After reading this &lt;a href=&quot;https://thestarman.pcministry.com/asm/mbr/PartTables.htm#Decoding&quot;&gt;post&lt;/a&gt;, I wrote a script that decode the 3 byte CHS hex value.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;inp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x5d0559&lt;/span&gt;		&lt;span class=&quot;c&quot;&gt;# 3 byte CHS &lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x003F00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cyn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00C000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0000FF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'CHS : '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cyn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# CHS: 89, 93, 5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The decoded CHS values can be converted into sectors using &lt;code&gt;(CYLINDER*&lt;i&gt;heads_per_cylinder&lt;/i&gt; + HEAD )*&lt;i&gt;sectors_per_head&lt;/i&gt; + SECTORS&lt;/code&gt; but I needed the system constants &lt;code&gt;&lt;i&gt;heads_per_cylinder&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;sectors_per_head&lt;/i&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To calculate these constants, I used the values of 2&lt;sup&gt;nd&lt;/sup&gt; partition. The first equation came using partition size and second using &lt;code&gt;starting sector(LBA)&lt;/code&gt; entry which is equal to &lt;code&gt;CHS_FIRST(in sectors)-1&lt;/code&gt;. Solving these 2 equations, we get&lt;/p&gt;

&lt;pre&gt;
&lt;i&gt;heads_per_cylinder&lt;/i&gt; = 255
&lt;i&gt;sectors_per_head&lt;/i&gt; = 63
&lt;/pre&gt;

&lt;p&gt;Now the size of partition 1 came out 716800 (0x000af000). Similarly I calculated &lt;code&gt;starting sector (LBA)&lt;/code&gt; 0x0015e800.&lt;/p&gt;

&lt;p&gt;After putting these values in the dump (converted to little-endian in the dump), it looked like&lt;/p&gt;

&lt;pre&gt;
000001b0: cd10 ac3c 0075 f4c3 608d 3b68 0000 0020  ...&amp;lt;.u..`.;h... 
000001c0: 2100 debe 122c 0008 0000 &lt;mark&gt;00f0 0a00&lt;/mark&gt; 00be  !....,..........
000001d0: 132c 075d 0459 00f8 0a00 00f0 0a00 005d  .,.].Y.........]
000001e0: 0559 07fe ffff &lt;mark&gt;00e8 1500&lt;/mark&gt; 00d0 e31d 00fe  .Y..............
000001f0: ffff 0ffe ffff 00b8 f91d 00a0 3e1c 55aa  ............&amp;gt;.U.
&lt;/pre&gt;

&lt;h6&gt;Questions based on dump 1&lt;/h6&gt;
&lt;blockquote&gt;
Q1. How many primary partitions are there in the hard disk dump?
&lt;/blockquote&gt;

&lt;pre&gt;
3, the 4&lt;sup&gt;th&lt;/sup&gt; partition is an extended partition because its partition type is &lt;mark&gt;0f&lt;/mark&gt;
and others are primary partitions.
&lt;/pre&gt;

&lt;blockquote&gt;
Q2. What is the disk signature of the hard disk for the given dump?
&lt;/blockquote&gt;

&lt;pre&gt;
&lt;mark&gt;55AA&lt;/mark&gt;. The last 2 bytes of the first sector.
&lt;/pre&gt;

&lt;blockquote&gt;
Q3. How many NTFS partitions are there?
&lt;/blockquote&gt;

&lt;pre&gt;
2, partition type of NTFS is &lt;mark&gt;07&lt;/mark&gt;.
&lt;/pre&gt;

&lt;blockquote&gt;
Q4. What is the size of hard disk in MBs?
&lt;/blockquote&gt;

&lt;pre&gt;
It can be calculated by adding size of the partitions and multiplying by
bytes_per_sector(0x200).
&lt;/pre&gt;

&lt;h3&gt;Dump 2&lt;/h3&gt;

&lt;blockquote&gt;
The first sector of 2&lt;sup&gt;nd&lt;/sup&gt; partition is modified to make the partition unusable by the operating system. Your task is to fix the first sector  and upload it back to us. MFT table of the partition is at the offset 0x1d3aa000 bytes from starting in the hard disk.
&lt;/blockquote&gt;

&lt;pre&gt;
00000000: &lt;mark&gt;cc&lt;/mark&gt;52 904e 5446 &lt;mark&gt;cc&lt;/mark&gt;20 2020 2000 0208 0000  .R.NTF.    .....
00000010: 0000 0000 00f8 0000 3f00 ff00 00f8 0a00  ........?.......
00000020: 0000 0000 8000 8000 &lt;mark&gt;cccc cccc cccc cccc&lt;/mark&gt;  ................
00000030: &lt;mark&gt;cccc cccc cccc cccc&lt;/mark&gt; 0200 0000 0000 0000  .t..............
&lt;/pre&gt;

&lt;p&gt;The first 2 corrupted bytes can be easily fixed if you look at &lt;a href=&quot;https://en.wikipedia.org/wiki/NTFS#Partition_Boot_Sector&quot;&gt;wiki&lt;/a&gt;. The next 8 bytes at address 0x28 represents partition size which can looked from the partition size entry corresponding to partition2 in the  &lt;a href=&quot;#part-table&quot;&gt;partition table&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The next 8 bytes represents &lt;a href=&quot;https://en.wikipedia.org/wiki/NTFS#Master_File_Table&quot;&gt;MFT&lt;/a&gt; offset from start of partition. It was calculated as difference of starting byte of 2&lt;sup&gt;nd&lt;/sup&gt; partition (calculated by multiplying &lt;code&gt;starting sector&lt;/code&gt; and &lt;code&gt;bytes_per_sector&lt;/code&gt;) and given absolute address of MFT which came out to be &lt;code&gt;0x74aa000&lt;/code&gt; bytes. Now it needed to be converted in units of clusters which was done by dividing &lt;code&gt;bytes_per_sector&lt;/code&gt; (0x200) and &lt;code&gt;sectors_per_cluster&lt;/code&gt; (0x08). And I went to address &lt;code&gt;0x74aa000&lt;/code&gt; and found the MFT was there so the calculations were correct.&lt;/p&gt;
&lt;pre id=&quot;dump2_fixed&quot;&gt;
074aa000: 4649 4c45 3000 0300 2f4c 4000 0000 0000  FILE0.../L@.....
074aa010: 0100 0100 3800 0100 9801 0000 0004 0000  ....8...........
074aa020: 0000 0000 0000 0000 0700 0000 0000 0000  ................
074aa030: 0300 ffff 0000 0000 1000 0000 6000 0000  ............`...
074aa040: 0000 1800 0000 0000 4800 0000 1800 0000  ........H.......
074aa050: 78af 695d 9cd6 d001 78af 695d 9cd6 d001  x.i]....x.i]....
074aa060: 78af 695d 9cd6 d001 78af 695d 9cd6 d001  x.i]....x.i]....
074aa070: 0600 0000 0000 0000 0000 0000 0000 0000  ................
074aa080: 0000 0000 0001 0000 0000 0000 0000 0000  ................
074aa090: 0000 0000 0000 0000 3000 0000 6800 0000  ........0...h...
074aa0a0: 0000 1800 0000 0300 4a00 0000 1800 0100  ........J.......
074aa0b0: 0500 0000 0000 0500 78af 695d 9cd6 d001  ........x.i]....
074aa0c0: 78af 695d 9cd6 d001 78af 695d 9cd6 d001  x.i]....x.i]....
074aa0d0: 78af 695d 9cd6 d001 0040 0000 0000 0000  x.i].....@......
074aa0e0: 0040 0000 0000 0000 0600 0000 0000 0000  .@..............
074aa0f0: 0403 2400 5300 4f00 4300 4700 4500 4e00  ..$.S.O.C.G.E.N
074aa100: 8000 0000 4800 0000 0100 4000 0000 0600  ....H.....@.....
074aa110: 0000 0000 0000 0000 3f00 0000 0000 0000  ........?.......
&lt;/pre&gt;

&lt;p&gt;This is how the dump looks after fixing it.&lt;/p&gt;

&lt;pre&gt;
00000000: eb52 904e 5446 5320 2020 2000 0208 0000  .R.NTFS    .....
00000010: 0000 0000 00f8 0000 3f00 ff00 00f8 0a00  ........?.......
00000020: 0000 0000 8000 8000 00f0 0a00 0000 0000  ................
00000030: aa74 0000 0000 0000 0200 0000 0000 0000  .t..............
&lt;/pre&gt;

&lt;p&gt;And on running &lt;code&gt;file&lt;/code&gt; on the fixed dump, then it showed all the attributes of the partition&lt;/p&gt;

&lt;pre&gt;
rnehra@pc ~&amp;gt; file dump2_fixed
dump2_fixed: DOS/MBR boot sector, code offset 0x52+2, OEM-ID &quot;NTFS    &quot;, sectors/cluster 8, Media descriptor 0xf8, sectors/track 63, heads 255, hidden sectors 718848, dos &amp;lt; 4.0 BootSector (0x80), FAT (1Y bit by descriptor); NTFS, sectors/track 63, sectors 716800, $MFT start cluster 29866, $MFTMirror start cluster 2, bytes/RecordSegment 2^(-1*246), clusters/index block 1, serial number 040ae5d9dae5d8c72
&lt;/pre&gt;

&lt;h6&gt;Questions based on dump 2&lt;/h6&gt;
&lt;blockquote&gt;
Q5. What is the size of cluster in bytes?
&lt;/blockquote&gt;

&lt;pre&gt;
4096. Multiply &lt;code&gt;bytes_per_sector&lt;/code&gt; (0x200) and &lt;code&gt;sectors_per_cluster&lt;/code&gt; (0x08)
&lt;/pre&gt;

&lt;blockquote&gt;
Q6. At what offset from the starting of partition the MFT table resides?
&lt;/blockquote&gt;

&lt;pre&gt;
0x74aa000
&lt;/pre&gt;

&lt;blockquote&gt;
Q7. What is the name of fist file?
&lt;/blockquote&gt;

&lt;pre&gt;
$SOCGEN.
Visible in last lines of &lt;a href=&quot;#dump2_fixed&quot;&gt;first sector&lt;/a&gt; of the partition
&lt;/pre&gt;

&lt;blockquote&gt;
Q8. Which is the first non-system or non-Meta file in MFT entry?
&lt;/blockquote&gt;

&lt;pre&gt;
MYDATA.TXT
Look at the location of non-Meta file &lt;a href=&quot;https://en.wikipedia.org/wiki/NTFS#Metafiles&quot;&gt;here&lt;/a&gt;.
&lt;/pre&gt;

&lt;p&gt;This is a good but easy online hackathon which requires knowledge of boot sector, filesystems and bootloaders basics. So I recommend the organisers that they can increase the difficulty a bit but I give them full marks for choosing a topic that teaches more about the system which I use everyday.&lt;/p&gt;</content><author><name>Ravinder Nehra</name></author><category term="hackathon" /><category term="security" /><summary type="html">This is the fifth edition of Brainwaves hackathon. The challenges are based on filesystems i.e. how data is stored in the hard disk. We are provided with 2 dumps of a hard disk.</summary></entry><entry><title type="html">$PATH to GSoC’17</title><link href="/path-to-gsoc17" rel="alternate" type="text/html" title="$PATH to GSoC'17" /><published>2017-06-14T12:00:00+00:00</published><updated>2017-06-14T12:00:00+00:00</updated><id>/path-to-gsoc17</id><content type="html" xml:base="/path-to-gsoc17">&lt;p&gt;It started almost a year back when I heard about GSoC for the first time in an introductory lecture by SDSLabs. I was quite
a noob except knowing a little about competitive coding. Then came the day when Google announced the mentoring organisations and I remember going through every single organistion but I couldn’t understand WHAT and WHERE to do. I tried sorting organisations according to programming language but nope, nothing :( I don’t even know about a commit.&lt;/p&gt;

&lt;p&gt;Though I had realised one thing that it’s not about language but it’s about field, I should have a background in any of these fields. I’ve tried Web and Android Development but neither fascinates me much. The deadline is one week away and then I met one of my classmate, &lt;a href=&quot;https://paraschetal.in&quot;&gt;Paras&lt;/a&gt; who was trying for GSoC and honestly I still didn’t have a clue. After the end of semester exams, I took him to my room and asked &lt;i&gt;What the heck is all this?&lt;/i&gt; He told me about his project and introduced me to Information Security. Well, Infosec is cool after all who doesn’t want to be a hacker, right? I spent my summer learning more about infosec, git and basic web backend to step into web exploitation. I made a &lt;a href=&quot;https://github.com/rnehra01/Tic-Tac-Toe&quot;&gt;Tic-Tack-Toe&lt;/a&gt; game using javascript and put it on my GitHub. The next semester was all about Infosec.&lt;/p&gt;

&lt;p&gt;Meanwhile, I started searching for open-source organisation to contribute in 2016 GSoC orgnisation list. Due to my interest in web security, I found &lt;a href=&quot;github.com/zaproxy&quot;&gt;OWASP ZAP&lt;/a&gt; a suitable candidate. But it’s code base is humongous. It took me almost half month till I found a &lt;a href=&quot;https://github.com/zaproxy/zap-extensions/pull/706/files?diff=split#diff-0553f2ca6daf4d735deffd0ab535a2afL60&quot;&gt;TODO&lt;/a&gt;, which is doable. It is just an extension of an attack whose code is already present in the same file. With this small patch, I submitted my first &lt;a href=&quot;https://github.com/zaproxy/zap-extensions/pull/706&quot;&gt;PR&lt;/a&gt;, Wooohhhuuu !!!&lt;/p&gt;

&lt;p&gt;Later I submitted an issue and another PR in January. Now odds are pretty good for me. Google was going to announce mentoring organisations on &lt;i&gt;27th Feb, 9:30 pm&lt;/i&gt; IST. At &lt;i&gt;9:31 pm&lt;/i&gt;, I got a message from Paras &lt;i&gt;“We’re screwed, man. OWASP isn’t selected”&lt;/i&gt;.
I knew the same thing had happened with one my senior but I still played the gamble and it didn’t work. So I had to start from sea level.&lt;br /&gt;
I finalized &lt;a href=&quot;https://www.honeynet.org/gsoc/ideas#snare-tanner&quot;&gt;Snare/Tanner&lt;/a&gt; and &lt;a href=&quot;https://www.honeynet.org/gsoc/ideas#mitmproxy-core&quot;&gt;Mitmproxy&lt;/a&gt; after searching for almost one week. The code base of Mitmproxy is large and I’m not much familiar with networks, it might take a lot of time to just understand and I wouldn’t be able to contribute much, so I put it on hold, though it’s my first choice.&lt;/p&gt;

&lt;p&gt;Snare/Tanner is a web security based project and also a new one, thus has a small code base. So I went for this one, contacted the mentor and started contributing by fixing bugs and writing missing tests.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/gsoc17_before_pr.png&quot; /&gt;&lt;/p&gt;
&lt;center style=&quot;font-size: 1.4rem&quot;&gt;&lt;i&gt;My Contributions before submitting final proposal&lt;/i&gt;&lt;/center&gt;

&lt;p&gt;The deadline for proposal submission is 2 weeks away, so I have to worry about proposal. I took some ideas from the &lt;i&gt;Ideas page&lt;/i&gt; and a few my own to make a good list of tasks. Then I looked at my seniors’ proposals, used them as template and organize tasks with timeline. I got it reviewed from &lt;a href=&quot;https://twitter.com/jay_f0xtr0t&quot;&gt;Jay Bosamiya&lt;/a&gt; and my mentor. I submitted the &lt;a href=&quot;/assets/pdf/HoneynetGSoCproposal.pdf&quot;&gt;final version&lt;/a&gt; 2 days before.&lt;/p&gt;

&lt;p&gt;The list of accepted student projects for Google Summer of Code ‘17 came on &lt;i&gt;4th May, 9:30 pm&lt;/i&gt; IST. I opened the website at &lt;i&gt;9:30 pm&lt;/i&gt; precisely and this made my day, technically night.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/gsoc17_snare_tanner.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’m looking forward to enjoy my summer with Honeynet. I’ll keep writing regular reports on this blog itself.&lt;/p&gt;

&lt;p&gt;I would like to thank my mentor &lt;a href=&quot;https://github.com/afeena&quot;&gt;Evgeniya&lt;/a&gt; for helping me throughout the entire process, &lt;a href=&quot;https://twitter.com/jay_f0xtr0t&quot;&gt;Jay bosamiya&lt;/a&gt; for reviewing my proposal and folks at &lt;a href=&quot;https://github.com/InfoSecIITR&quot;&gt;InfoSecIITR&lt;/a&gt; for the entire Infosec journey, especially &lt;a href=&quot;https://paraschetal.in&quot;&gt;Paras&lt;/a&gt; for getting me started.&lt;/p&gt;</content><author><name>Ravinder Nehra</name></author><category term="gsoc" /><category term="dev" /><category term="security" /><summary type="html">It started almost a year back when I heard about GSoC for the first time in an introductory lecture by SDSLabs. I was quite a noob except knowing a little about competitive coding. Then came the day when Google announced the mentoring organisations and I remember going through every single organistion but I couldn’t understand WHAT and WHERE to do. I tried sorting organisations according to programming language but nope, nothing :( I don’t even know about a commit.</summary></entry></feed>